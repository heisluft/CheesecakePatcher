--- src/main/java/eu/hackathon/cheesecake/external/audio/AudioClip.java
+++ src/main/java/eu/hackathon/cheesecake/external/audio/AudioClip.java
@@ -4,33 +4,24 @@
 package eu.hackathon.cheesecake.external.audio;
 
+import de.heisluft.capi.resources.MissingResourceException;
+import de.heisluft.capi.resources.ResourceLocation;
+import eu.hackathon.game.GameHandler;
+
 import javax.sound.sampled.*;
+import java.io.BufferedInputStream;
 import java.io.IOException;
-import java.net.URL;
 
 public class AudioClip implements Cloneable {
-    private URL url;
-    private AudioInputStream audioInputStream;
-    private AudioFormat audioFormat;
 
-    private DataLine.Info info;
-
     private Clip clip;
     private volatile boolean isPlaying;
 
-    public AudioClip(String source, AudioType audioType) {
+    public AudioClip(ResourceLocation location) {
         try {
-            this.url = this.getClass().getResource(source + audioType.format());
+            AudioInputStream ais = AudioSystem.getAudioInputStream(new BufferedInputStream(GameHandler.instance().getCurrentAssets().getInputStream(location)));
+            this.clip = (Clip) AudioSystem.getLine(new DataLine.Info(Clip.class, ais.getFormat()));
 
-            this.audioInputStream = AudioSystem.getAudioInputStream(url);
-            this.audioFormat = audioInputStream.getFormat();
-
-            this.info = new DataLine.Info(Clip.class, audioFormat);
-            this.clip = (Clip) AudioSystem.getLine(info);
-
-            this.clip.addLineListener(e -> {
-                if (e.getType().equals(LineEvent.Type.START)) {
-                    isPlaying = true;
-                }
-
+            clip.addLineListener(e -> {
+                if (e.getType().equals(LineEvent.Type.START)) isPlaying = true;
                 if (e.getType().equals(LineEvent.Type.STOP)) {
                     clip.stop();
@@ -40,7 +31,6 @@
                 }
             });
-
-            clip.open(audioInputStream);
-        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
+            clip.open(ais);
+        } catch(MissingResourceException | IOException | UnsupportedAudioFileException | LineUnavailableException e) {
             e.printStackTrace();
         }
@@ -53,12 +43,7 @@
     public void play(boolean isUnsafe) {
         if (!isUnsafe) {
-            if (isPlaying) {
-                return;
-            }
-            isPlaying = true;
+            if (!isPlaying) isPlaying = true;
         } else {
-            if (isPlaying) {
-                clip.stop();
-            }
+            if (isPlaying) clip.stop();
             clip.setFramePosition(0);
         }
